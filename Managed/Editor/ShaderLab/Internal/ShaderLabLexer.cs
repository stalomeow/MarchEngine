//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ShaderLab.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace DX12Demo.Editor.ShaderLab.Internal {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public partial class ShaderLabLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, HlslProgram=26, Assign=27, LeftBrace=28, RightBrace=29, StringLiteral=30, 
		BracketLiteral=31, IntegerLiteral=32, FloatLiteral=33, Float=34, Int=35, 
		Color=36, Vector=37, Texture=38, On=39, Off=40, Front=41, Back=42, Zero=43, 
		One=44, SrcColor=45, InvSrcColor=46, SrcAlpha=47, InvSrcAlpha=48, DestAlpha=49, 
		InvDestAlpha=50, DestColor=51, InvDestColor=52, SrcAlphaSat=53, Add=54, 
		Sub=55, RevSub=56, Min=57, Max=58, Never=59, Less=60, Equal=61, LessEqual=62, 
		Greater=63, NotEqual=64, GreaterEqual=65, Always=66, Keep=67, Replace=68, 
		IncrSat=69, DecrSat=70, Invert=71, Incr=72, Decr=73, Identifier=74, Whitespace=75, 
		Newline=76, BlockComment=77, LineComment=78;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"HlslProgram", "Assign", "LeftBrace", "RightBrace", "StringLiteral", "BracketLiteral", 
		"Digit", "HexadecimalDigit", "IntegerLiteral", "FloatLiteral", "Float", 
		"Int", "Color", "Vector", "Texture", "On", "Off", "Front", "Back", "Zero", 
		"One", "SrcColor", "InvSrcColor", "SrcAlpha", "InvSrcAlpha", "DestAlpha", 
		"InvDestAlpha", "DestColor", "InvDestColor", "SrcAlphaSat", "Add", "Sub", 
		"RevSub", "Min", "Max", "Never", "Less", "Equal", "LessEqual", "Greater", 
		"NotEqual", "GreaterEqual", "Always", "Keep", "Replace", "IncrSat", "DecrSat", 
		"Invert", "Incr", "Decr", "Identifier", "Whitespace", "Newline", "BlockComment", 
		"LineComment"
	};


	public ShaderLabLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public ShaderLabLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'Shader'", "'Properties'", "'Pass'", "'('", "','", "')'", "'Name'", 
		"'Cull'", "'ZTest'", "'ZWrite'", "'Blend'", "'BlendOp'", "'ColorMask'", 
		"'Stencil'", "'Ref'", "'ReadMask'", "'WriteMask'", "'CompFront'", "'PassFront'", 
		"'FailFront'", "'ZFailFront'", "'CompBack'", "'PassBack'", "'FailBack'", 
		"'ZFailBack'", null, "'='", "'{'", "'}'", null, null, null, null, "'Float'", 
		"'Int'", "'Color'", "'Vector'", "'2D'", "'On'", "'Off'", "'Front'", "'Back'", 
		"'Zero'", "'One'", "'SrcColor'", "'InvSrcColor'", "'SrcAlpha'", "'InvSrcAlpha'", 
		"'DestAlpha'", "'InvDestAlpha'", "'DestColor'", "'InvDestColor'", "'SrcAlphaSat'", 
		"'Add'", "'Sub'", "'RevSub'", "'Min'", "'Max'", "'Never'", "'Less'", "'Equal'", 
		"'LessEqual'", "'Greater'", "'NotEqual'", "'GreaterEqual'", "'Always'", 
		"'Keep'", "'Replace'", "'IncrSat'", "'DecrSat'", "'Invert'", "'Incr'", 
		"'Decr'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, "HlslProgram", "Assign", "LeftBrace", "RightBrace", "StringLiteral", 
		"BracketLiteral", "IntegerLiteral", "FloatLiteral", "Float", "Int", "Color", 
		"Vector", "Texture", "On", "Off", "Front", "Back", "Zero", "One", "SrcColor", 
		"InvSrcColor", "SrcAlpha", "InvSrcAlpha", "DestAlpha", "InvDestAlpha", 
		"DestColor", "InvDestColor", "SrcAlphaSat", "Add", "Sub", "RevSub", "Min", 
		"Max", "Never", "Less", "Equal", "LessEqual", "Greater", "NotEqual", "GreaterEqual", 
		"Always", "Keep", "Replace", "IncrSat", "DecrSat", "Invert", "Incr", "Decr", 
		"Identifier", "Whitespace", "Newline", "BlockComment", "LineComment"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "ShaderLab.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static ShaderLabLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,78,768,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
		7,77,2,78,7,78,2,79,7,79,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,
		1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,
		1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,
		9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,
		1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,
		1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,15,1,15,
		1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,
		1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,
		1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,
		1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,
		1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,
		1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,
		1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,
		1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,5,25,360,8,25,10,25,
		12,25,363,9,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,27,
		1,27,1,28,1,28,1,29,1,29,5,29,381,8,29,10,29,12,29,384,9,29,1,29,1,29,
		1,30,1,30,5,30,390,8,30,10,30,12,30,393,9,30,1,30,1,30,1,31,1,31,1,32,
		1,32,1,33,4,33,402,8,33,11,33,12,33,403,1,33,1,33,1,33,4,33,409,8,33,11,
		33,12,33,410,3,33,413,8,33,1,34,4,34,416,8,34,11,34,12,34,417,1,34,1,34,
		5,34,422,8,34,10,34,12,34,425,9,34,1,34,1,34,4,34,429,8,34,11,34,12,34,
		430,3,34,433,8,34,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,
		37,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,
		39,1,39,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,
		42,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,
		45,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,
		47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,
		48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,
		49,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,
		51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,
		52,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,
		53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,
		54,1,54,1,54,1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,
		57,1,57,1,57,1,57,1,58,1,58,1,58,1,58,1,59,1,59,1,59,1,59,1,60,1,60,1,
		60,1,60,1,60,1,60,1,61,1,61,1,61,1,61,1,61,1,62,1,62,1,62,1,62,1,62,1,
		62,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,64,1,64,1,64,1,
		64,1,64,1,64,1,64,1,64,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,
		66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,67,1,
		67,1,67,1,67,1,67,1,67,1,67,1,68,1,68,1,68,1,68,1,68,1,69,1,69,1,69,1,
		69,1,69,1,69,1,69,1,69,1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,71,1,
		71,1,71,1,71,1,71,1,71,1,71,1,71,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,
		73,1,73,1,73,1,73,1,73,1,74,1,74,1,74,1,74,1,74,1,75,1,75,5,75,723,8,75,
		10,75,12,75,726,9,75,1,76,4,76,729,8,76,11,76,12,76,730,1,76,1,76,1,77,
		1,77,3,77,737,8,77,1,77,3,77,740,8,77,1,77,1,77,1,78,1,78,1,78,1,78,5,
		78,748,8,78,10,78,12,78,751,9,78,1,78,1,78,1,78,1,78,1,78,1,79,1,79,1,
		79,1,79,5,79,762,8,79,10,79,12,79,765,9,79,1,79,1,79,2,361,749,0,80,1,
		1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,
		15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,
		27,55,28,57,29,59,30,61,31,63,0,65,0,67,32,69,33,71,34,73,35,75,36,77,
		37,79,38,81,39,83,40,85,41,87,42,89,43,91,44,93,45,95,46,97,47,99,48,101,
		49,103,50,105,51,107,52,109,53,111,54,113,55,115,56,117,57,119,58,121,
		59,123,60,125,61,127,62,129,63,131,64,133,65,135,66,137,67,139,68,141,
		69,143,70,145,71,147,72,149,73,151,74,153,75,155,76,157,77,159,78,1,0,
		9,3,0,10,10,13,13,34,34,3,0,10,10,13,13,93,93,1,0,48,57,3,0,48,57,65,70,
		97,102,2,0,88,88,120,120,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,
		97,122,2,0,9,9,32,32,2,0,10,10,13,13,781,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,
		0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,
		17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,
		0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,
		0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,
		1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,
		0,0,61,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,
		1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,
		0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,
		1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,
		0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,
		0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,
		0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,
		0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,
		0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,
		0,0,0,0,159,1,0,0,0,1,161,1,0,0,0,3,168,1,0,0,0,5,179,1,0,0,0,7,184,1,
		0,0,0,9,186,1,0,0,0,11,188,1,0,0,0,13,190,1,0,0,0,15,195,1,0,0,0,17,200,
		1,0,0,0,19,206,1,0,0,0,21,213,1,0,0,0,23,219,1,0,0,0,25,227,1,0,0,0,27,
		237,1,0,0,0,29,245,1,0,0,0,31,249,1,0,0,0,33,258,1,0,0,0,35,268,1,0,0,
		0,37,278,1,0,0,0,39,288,1,0,0,0,41,298,1,0,0,0,43,309,1,0,0,0,45,318,1,
		0,0,0,47,327,1,0,0,0,49,336,1,0,0,0,51,346,1,0,0,0,53,372,1,0,0,0,55,374,
		1,0,0,0,57,376,1,0,0,0,59,378,1,0,0,0,61,387,1,0,0,0,63,396,1,0,0,0,65,
		398,1,0,0,0,67,412,1,0,0,0,69,432,1,0,0,0,71,434,1,0,0,0,73,440,1,0,0,
		0,75,444,1,0,0,0,77,450,1,0,0,0,79,457,1,0,0,0,81,460,1,0,0,0,83,463,1,
		0,0,0,85,467,1,0,0,0,87,473,1,0,0,0,89,478,1,0,0,0,91,483,1,0,0,0,93,487,
		1,0,0,0,95,496,1,0,0,0,97,508,1,0,0,0,99,517,1,0,0,0,101,529,1,0,0,0,103,
		539,1,0,0,0,105,552,1,0,0,0,107,562,1,0,0,0,109,575,1,0,0,0,111,587,1,
		0,0,0,113,591,1,0,0,0,115,595,1,0,0,0,117,602,1,0,0,0,119,606,1,0,0,0,
		121,610,1,0,0,0,123,616,1,0,0,0,125,621,1,0,0,0,127,627,1,0,0,0,129,637,
		1,0,0,0,131,645,1,0,0,0,133,654,1,0,0,0,135,667,1,0,0,0,137,674,1,0,0,
		0,139,679,1,0,0,0,141,687,1,0,0,0,143,695,1,0,0,0,145,703,1,0,0,0,147,
		710,1,0,0,0,149,715,1,0,0,0,151,720,1,0,0,0,153,728,1,0,0,0,155,739,1,
		0,0,0,157,743,1,0,0,0,159,757,1,0,0,0,161,162,5,83,0,0,162,163,5,104,0,
		0,163,164,5,97,0,0,164,165,5,100,0,0,165,166,5,101,0,0,166,167,5,114,0,
		0,167,2,1,0,0,0,168,169,5,80,0,0,169,170,5,114,0,0,170,171,5,111,0,0,171,
		172,5,112,0,0,172,173,5,101,0,0,173,174,5,114,0,0,174,175,5,116,0,0,175,
		176,5,105,0,0,176,177,5,101,0,0,177,178,5,115,0,0,178,4,1,0,0,0,179,180,
		5,80,0,0,180,181,5,97,0,0,181,182,5,115,0,0,182,183,5,115,0,0,183,6,1,
		0,0,0,184,185,5,40,0,0,185,8,1,0,0,0,186,187,5,44,0,0,187,10,1,0,0,0,188,
		189,5,41,0,0,189,12,1,0,0,0,190,191,5,78,0,0,191,192,5,97,0,0,192,193,
		5,109,0,0,193,194,5,101,0,0,194,14,1,0,0,0,195,196,5,67,0,0,196,197,5,
		117,0,0,197,198,5,108,0,0,198,199,5,108,0,0,199,16,1,0,0,0,200,201,5,90,
		0,0,201,202,5,84,0,0,202,203,5,101,0,0,203,204,5,115,0,0,204,205,5,116,
		0,0,205,18,1,0,0,0,206,207,5,90,0,0,207,208,5,87,0,0,208,209,5,114,0,0,
		209,210,5,105,0,0,210,211,5,116,0,0,211,212,5,101,0,0,212,20,1,0,0,0,213,
		214,5,66,0,0,214,215,5,108,0,0,215,216,5,101,0,0,216,217,5,110,0,0,217,
		218,5,100,0,0,218,22,1,0,0,0,219,220,5,66,0,0,220,221,5,108,0,0,221,222,
		5,101,0,0,222,223,5,110,0,0,223,224,5,100,0,0,224,225,5,79,0,0,225,226,
		5,112,0,0,226,24,1,0,0,0,227,228,5,67,0,0,228,229,5,111,0,0,229,230,5,
		108,0,0,230,231,5,111,0,0,231,232,5,114,0,0,232,233,5,77,0,0,233,234,5,
		97,0,0,234,235,5,115,0,0,235,236,5,107,0,0,236,26,1,0,0,0,237,238,5,83,
		0,0,238,239,5,116,0,0,239,240,5,101,0,0,240,241,5,110,0,0,241,242,5,99,
		0,0,242,243,5,105,0,0,243,244,5,108,0,0,244,28,1,0,0,0,245,246,5,82,0,
		0,246,247,5,101,0,0,247,248,5,102,0,0,248,30,1,0,0,0,249,250,5,82,0,0,
		250,251,5,101,0,0,251,252,5,97,0,0,252,253,5,100,0,0,253,254,5,77,0,0,
		254,255,5,97,0,0,255,256,5,115,0,0,256,257,5,107,0,0,257,32,1,0,0,0,258,
		259,5,87,0,0,259,260,5,114,0,0,260,261,5,105,0,0,261,262,5,116,0,0,262,
		263,5,101,0,0,263,264,5,77,0,0,264,265,5,97,0,0,265,266,5,115,0,0,266,
		267,5,107,0,0,267,34,1,0,0,0,268,269,5,67,0,0,269,270,5,111,0,0,270,271,
		5,109,0,0,271,272,5,112,0,0,272,273,5,70,0,0,273,274,5,114,0,0,274,275,
		5,111,0,0,275,276,5,110,0,0,276,277,5,116,0,0,277,36,1,0,0,0,278,279,5,
		80,0,0,279,280,5,97,0,0,280,281,5,115,0,0,281,282,5,115,0,0,282,283,5,
		70,0,0,283,284,5,114,0,0,284,285,5,111,0,0,285,286,5,110,0,0,286,287,5,
		116,0,0,287,38,1,0,0,0,288,289,5,70,0,0,289,290,5,97,0,0,290,291,5,105,
		0,0,291,292,5,108,0,0,292,293,5,70,0,0,293,294,5,114,0,0,294,295,5,111,
		0,0,295,296,5,110,0,0,296,297,5,116,0,0,297,40,1,0,0,0,298,299,5,90,0,
		0,299,300,5,70,0,0,300,301,5,97,0,0,301,302,5,105,0,0,302,303,5,108,0,
		0,303,304,5,70,0,0,304,305,5,114,0,0,305,306,5,111,0,0,306,307,5,110,0,
		0,307,308,5,116,0,0,308,42,1,0,0,0,309,310,5,67,0,0,310,311,5,111,0,0,
		311,312,5,109,0,0,312,313,5,112,0,0,313,314,5,66,0,0,314,315,5,97,0,0,
		315,316,5,99,0,0,316,317,5,107,0,0,317,44,1,0,0,0,318,319,5,80,0,0,319,
		320,5,97,0,0,320,321,5,115,0,0,321,322,5,115,0,0,322,323,5,66,0,0,323,
		324,5,97,0,0,324,325,5,99,0,0,325,326,5,107,0,0,326,46,1,0,0,0,327,328,
		5,70,0,0,328,329,5,97,0,0,329,330,5,105,0,0,330,331,5,108,0,0,331,332,
		5,66,0,0,332,333,5,97,0,0,333,334,5,99,0,0,334,335,5,107,0,0,335,48,1,
		0,0,0,336,337,5,90,0,0,337,338,5,70,0,0,338,339,5,97,0,0,339,340,5,105,
		0,0,340,341,5,108,0,0,341,342,5,66,0,0,342,343,5,97,0,0,343,344,5,99,0,
		0,344,345,5,107,0,0,345,50,1,0,0,0,346,347,5,72,0,0,347,348,5,76,0,0,348,
		349,5,83,0,0,349,350,5,76,0,0,350,351,5,80,0,0,351,352,5,82,0,0,352,353,
		5,79,0,0,353,354,5,71,0,0,354,355,5,82,0,0,355,356,5,65,0,0,356,357,5,
		77,0,0,357,361,1,0,0,0,358,360,9,0,0,0,359,358,1,0,0,0,360,363,1,0,0,0,
		361,362,1,0,0,0,361,359,1,0,0,0,362,364,1,0,0,0,363,361,1,0,0,0,364,365,
		5,69,0,0,365,366,5,78,0,0,366,367,5,68,0,0,367,368,5,72,0,0,368,369,5,
		76,0,0,369,370,5,83,0,0,370,371,5,76,0,0,371,52,1,0,0,0,372,373,5,61,0,
		0,373,54,1,0,0,0,374,375,5,123,0,0,375,56,1,0,0,0,376,377,5,125,0,0,377,
		58,1,0,0,0,378,382,5,34,0,0,379,381,8,0,0,0,380,379,1,0,0,0,381,384,1,
		0,0,0,382,380,1,0,0,0,382,383,1,0,0,0,383,385,1,0,0,0,384,382,1,0,0,0,
		385,386,5,34,0,0,386,60,1,0,0,0,387,391,5,91,0,0,388,390,8,1,0,0,389,388,
		1,0,0,0,390,393,1,0,0,0,391,389,1,0,0,0,391,392,1,0,0,0,392,394,1,0,0,
		0,393,391,1,0,0,0,394,395,5,93,0,0,395,62,1,0,0,0,396,397,7,2,0,0,397,
		64,1,0,0,0,398,399,7,3,0,0,399,66,1,0,0,0,400,402,3,63,31,0,401,400,1,
		0,0,0,402,403,1,0,0,0,403,401,1,0,0,0,403,404,1,0,0,0,404,413,1,0,0,0,
		405,406,5,48,0,0,406,408,7,4,0,0,407,409,3,65,32,0,408,407,1,0,0,0,409,
		410,1,0,0,0,410,408,1,0,0,0,410,411,1,0,0,0,411,413,1,0,0,0,412,401,1,
		0,0,0,412,405,1,0,0,0,413,68,1,0,0,0,414,416,3,63,31,0,415,414,1,0,0,0,
		416,417,1,0,0,0,417,415,1,0,0,0,417,418,1,0,0,0,418,419,1,0,0,0,419,423,
		5,46,0,0,420,422,3,63,31,0,421,420,1,0,0,0,422,425,1,0,0,0,423,421,1,0,
		0,0,423,424,1,0,0,0,424,433,1,0,0,0,425,423,1,0,0,0,426,428,5,46,0,0,427,
		429,3,63,31,0,428,427,1,0,0,0,429,430,1,0,0,0,430,428,1,0,0,0,430,431,
		1,0,0,0,431,433,1,0,0,0,432,415,1,0,0,0,432,426,1,0,0,0,433,70,1,0,0,0,
		434,435,5,70,0,0,435,436,5,108,0,0,436,437,5,111,0,0,437,438,5,97,0,0,
		438,439,5,116,0,0,439,72,1,0,0,0,440,441,5,73,0,0,441,442,5,110,0,0,442,
		443,5,116,0,0,443,74,1,0,0,0,444,445,5,67,0,0,445,446,5,111,0,0,446,447,
		5,108,0,0,447,448,5,111,0,0,448,449,5,114,0,0,449,76,1,0,0,0,450,451,5,
		86,0,0,451,452,5,101,0,0,452,453,5,99,0,0,453,454,5,116,0,0,454,455,5,
		111,0,0,455,456,5,114,0,0,456,78,1,0,0,0,457,458,5,50,0,0,458,459,5,68,
		0,0,459,80,1,0,0,0,460,461,5,79,0,0,461,462,5,110,0,0,462,82,1,0,0,0,463,
		464,5,79,0,0,464,465,5,102,0,0,465,466,5,102,0,0,466,84,1,0,0,0,467,468,
		5,70,0,0,468,469,5,114,0,0,469,470,5,111,0,0,470,471,5,110,0,0,471,472,
		5,116,0,0,472,86,1,0,0,0,473,474,5,66,0,0,474,475,5,97,0,0,475,476,5,99,
		0,0,476,477,5,107,0,0,477,88,1,0,0,0,478,479,5,90,0,0,479,480,5,101,0,
		0,480,481,5,114,0,0,481,482,5,111,0,0,482,90,1,0,0,0,483,484,5,79,0,0,
		484,485,5,110,0,0,485,486,5,101,0,0,486,92,1,0,0,0,487,488,5,83,0,0,488,
		489,5,114,0,0,489,490,5,99,0,0,490,491,5,67,0,0,491,492,5,111,0,0,492,
		493,5,108,0,0,493,494,5,111,0,0,494,495,5,114,0,0,495,94,1,0,0,0,496,497,
		5,73,0,0,497,498,5,110,0,0,498,499,5,118,0,0,499,500,5,83,0,0,500,501,
		5,114,0,0,501,502,5,99,0,0,502,503,5,67,0,0,503,504,5,111,0,0,504,505,
		5,108,0,0,505,506,5,111,0,0,506,507,5,114,0,0,507,96,1,0,0,0,508,509,5,
		83,0,0,509,510,5,114,0,0,510,511,5,99,0,0,511,512,5,65,0,0,512,513,5,108,
		0,0,513,514,5,112,0,0,514,515,5,104,0,0,515,516,5,97,0,0,516,98,1,0,0,
		0,517,518,5,73,0,0,518,519,5,110,0,0,519,520,5,118,0,0,520,521,5,83,0,
		0,521,522,5,114,0,0,522,523,5,99,0,0,523,524,5,65,0,0,524,525,5,108,0,
		0,525,526,5,112,0,0,526,527,5,104,0,0,527,528,5,97,0,0,528,100,1,0,0,0,
		529,530,5,68,0,0,530,531,5,101,0,0,531,532,5,115,0,0,532,533,5,116,0,0,
		533,534,5,65,0,0,534,535,5,108,0,0,535,536,5,112,0,0,536,537,5,104,0,0,
		537,538,5,97,0,0,538,102,1,0,0,0,539,540,5,73,0,0,540,541,5,110,0,0,541,
		542,5,118,0,0,542,543,5,68,0,0,543,544,5,101,0,0,544,545,5,115,0,0,545,
		546,5,116,0,0,546,547,5,65,0,0,547,548,5,108,0,0,548,549,5,112,0,0,549,
		550,5,104,0,0,550,551,5,97,0,0,551,104,1,0,0,0,552,553,5,68,0,0,553,554,
		5,101,0,0,554,555,5,115,0,0,555,556,5,116,0,0,556,557,5,67,0,0,557,558,
		5,111,0,0,558,559,5,108,0,0,559,560,5,111,0,0,560,561,5,114,0,0,561,106,
		1,0,0,0,562,563,5,73,0,0,563,564,5,110,0,0,564,565,5,118,0,0,565,566,5,
		68,0,0,566,567,5,101,0,0,567,568,5,115,0,0,568,569,5,116,0,0,569,570,5,
		67,0,0,570,571,5,111,0,0,571,572,5,108,0,0,572,573,5,111,0,0,573,574,5,
		114,0,0,574,108,1,0,0,0,575,576,5,83,0,0,576,577,5,114,0,0,577,578,5,99,
		0,0,578,579,5,65,0,0,579,580,5,108,0,0,580,581,5,112,0,0,581,582,5,104,
		0,0,582,583,5,97,0,0,583,584,5,83,0,0,584,585,5,97,0,0,585,586,5,116,0,
		0,586,110,1,0,0,0,587,588,5,65,0,0,588,589,5,100,0,0,589,590,5,100,0,0,
		590,112,1,0,0,0,591,592,5,83,0,0,592,593,5,117,0,0,593,594,5,98,0,0,594,
		114,1,0,0,0,595,596,5,82,0,0,596,597,5,101,0,0,597,598,5,118,0,0,598,599,
		5,83,0,0,599,600,5,117,0,0,600,601,5,98,0,0,601,116,1,0,0,0,602,603,5,
		77,0,0,603,604,5,105,0,0,604,605,5,110,0,0,605,118,1,0,0,0,606,607,5,77,
		0,0,607,608,5,97,0,0,608,609,5,120,0,0,609,120,1,0,0,0,610,611,5,78,0,
		0,611,612,5,101,0,0,612,613,5,118,0,0,613,614,5,101,0,0,614,615,5,114,
		0,0,615,122,1,0,0,0,616,617,5,76,0,0,617,618,5,101,0,0,618,619,5,115,0,
		0,619,620,5,115,0,0,620,124,1,0,0,0,621,622,5,69,0,0,622,623,5,113,0,0,
		623,624,5,117,0,0,624,625,5,97,0,0,625,626,5,108,0,0,626,126,1,0,0,0,627,
		628,5,76,0,0,628,629,5,101,0,0,629,630,5,115,0,0,630,631,5,115,0,0,631,
		632,5,69,0,0,632,633,5,113,0,0,633,634,5,117,0,0,634,635,5,97,0,0,635,
		636,5,108,0,0,636,128,1,0,0,0,637,638,5,71,0,0,638,639,5,114,0,0,639,640,
		5,101,0,0,640,641,5,97,0,0,641,642,5,116,0,0,642,643,5,101,0,0,643,644,
		5,114,0,0,644,130,1,0,0,0,645,646,5,78,0,0,646,647,5,111,0,0,647,648,5,
		116,0,0,648,649,5,69,0,0,649,650,5,113,0,0,650,651,5,117,0,0,651,652,5,
		97,0,0,652,653,5,108,0,0,653,132,1,0,0,0,654,655,5,71,0,0,655,656,5,114,
		0,0,656,657,5,101,0,0,657,658,5,97,0,0,658,659,5,116,0,0,659,660,5,101,
		0,0,660,661,5,114,0,0,661,662,5,69,0,0,662,663,5,113,0,0,663,664,5,117,
		0,0,664,665,5,97,0,0,665,666,5,108,0,0,666,134,1,0,0,0,667,668,5,65,0,
		0,668,669,5,108,0,0,669,670,5,119,0,0,670,671,5,97,0,0,671,672,5,121,0,
		0,672,673,5,115,0,0,673,136,1,0,0,0,674,675,5,75,0,0,675,676,5,101,0,0,
		676,677,5,101,0,0,677,678,5,112,0,0,678,138,1,0,0,0,679,680,5,82,0,0,680,
		681,5,101,0,0,681,682,5,112,0,0,682,683,5,108,0,0,683,684,5,97,0,0,684,
		685,5,99,0,0,685,686,5,101,0,0,686,140,1,0,0,0,687,688,5,73,0,0,688,689,
		5,110,0,0,689,690,5,99,0,0,690,691,5,114,0,0,691,692,5,83,0,0,692,693,
		5,97,0,0,693,694,5,116,0,0,694,142,1,0,0,0,695,696,5,68,0,0,696,697,5,
		101,0,0,697,698,5,99,0,0,698,699,5,114,0,0,699,700,5,83,0,0,700,701,5,
		97,0,0,701,702,5,116,0,0,702,144,1,0,0,0,703,704,5,73,0,0,704,705,5,110,
		0,0,705,706,5,118,0,0,706,707,5,101,0,0,707,708,5,114,0,0,708,709,5,116,
		0,0,709,146,1,0,0,0,710,711,5,73,0,0,711,712,5,110,0,0,712,713,5,99,0,
		0,713,714,5,114,0,0,714,148,1,0,0,0,715,716,5,68,0,0,716,717,5,101,0,0,
		717,718,5,99,0,0,718,719,5,114,0,0,719,150,1,0,0,0,720,724,7,5,0,0,721,
		723,7,6,0,0,722,721,1,0,0,0,723,726,1,0,0,0,724,722,1,0,0,0,724,725,1,
		0,0,0,725,152,1,0,0,0,726,724,1,0,0,0,727,729,7,7,0,0,728,727,1,0,0,0,
		729,730,1,0,0,0,730,728,1,0,0,0,730,731,1,0,0,0,731,732,1,0,0,0,732,733,
		6,76,0,0,733,154,1,0,0,0,734,736,5,13,0,0,735,737,5,10,0,0,736,735,1,0,
		0,0,736,737,1,0,0,0,737,740,1,0,0,0,738,740,5,10,0,0,739,734,1,0,0,0,739,
		738,1,0,0,0,740,741,1,0,0,0,741,742,6,77,1,0,742,156,1,0,0,0,743,744,5,
		47,0,0,744,745,5,42,0,0,745,749,1,0,0,0,746,748,9,0,0,0,747,746,1,0,0,
		0,748,751,1,0,0,0,749,750,1,0,0,0,749,747,1,0,0,0,750,752,1,0,0,0,751,
		749,1,0,0,0,752,753,5,42,0,0,753,754,5,47,0,0,754,755,1,0,0,0,755,756,
		6,78,0,0,756,158,1,0,0,0,757,758,5,47,0,0,758,759,5,47,0,0,759,763,1,0,
		0,0,760,762,8,8,0,0,761,760,1,0,0,0,762,765,1,0,0,0,763,761,1,0,0,0,763,
		764,1,0,0,0,764,766,1,0,0,0,765,763,1,0,0,0,766,767,6,79,0,0,767,160,1,
		0,0,0,17,0,361,382,391,403,410,412,417,423,430,432,724,730,736,739,749,
		763,2,0,1,0,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace DX12Demo.Editor.ShaderLab.Internal
