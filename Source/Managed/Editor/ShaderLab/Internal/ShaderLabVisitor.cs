//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ShaderLab.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace March.Editor.ShaderLab.Internal {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="ShaderLabParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IShaderLabVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.shader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShader([NotNull] ShaderLabParser.ShaderContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.shaderDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShaderDeclaration([NotNull] ShaderLabParser.ShaderDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.propertiesBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropertiesBlock([NotNull] ShaderLabParser.PropertiesBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.passBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPassBlock([NotNull] ShaderLabParser.PassBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.passDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPassDeclaration([NotNull] ShaderLabParser.PassDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.attributeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAttributeDeclaration([NotNull] ShaderLabParser.AttributeDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.numberLiteralExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumberLiteralExpression([NotNull] ShaderLabParser.NumberLiteralExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.vectorLiteralExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVectorLiteralExpression([NotNull] ShaderLabParser.VectorLiteralExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.textureLiteralExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTextureLiteralExpression([NotNull] ShaderLabParser.TextureLiteralExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.propertyDefaultValueExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropertyDefaultValueExpression([NotNull] ShaderLabParser.PropertyDefaultValueExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.propertyTypeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropertyTypeDeclaration([NotNull] ShaderLabParser.PropertyTypeDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.propertyDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropertyDeclaration([NotNull] ShaderLabParser.PropertyDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.nameDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNameDeclaration([NotNull] ShaderLabParser.NameDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.renderStateDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRenderStateDeclaration([NotNull] ShaderLabParser.RenderStateDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.tagsBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTagsBlock([NotNull] ShaderLabParser.TagsBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.tagDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTagDeclaration([NotNull] ShaderLabParser.TagDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.cullDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCullDeclaration([NotNull] ShaderLabParser.CullDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.zTestDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitZTestDeclaration([NotNull] ShaderLabParser.ZTestDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.zWriteDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitZWriteDeclaration([NotNull] ShaderLabParser.ZWriteDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.blendDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlendDeclaration([NotNull] ShaderLabParser.BlendDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.blendOpDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlendOpDeclaration([NotNull] ShaderLabParser.BlendOpDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>colorMaskInt1Declaration</c>
	/// labeled alternative in <see cref="ShaderLabParser.colorMaskDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitColorMaskInt1Declaration([NotNull] ShaderLabParser.ColorMaskInt1DeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>colorMaskInt2Declaration</c>
	/// labeled alternative in <see cref="ShaderLabParser.colorMaskDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitColorMaskInt2Declaration([NotNull] ShaderLabParser.ColorMaskInt2DeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>colorMaskIdentifierDeclaration</c>
	/// labeled alternative in <see cref="ShaderLabParser.colorMaskDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitColorMaskIdentifierDeclaration([NotNull] ShaderLabParser.ColorMaskIdentifierDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.stencilBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStencilBlock([NotNull] ShaderLabParser.StencilBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.stencilDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStencilDeclaration([NotNull] ShaderLabParser.StencilDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.stencilRefDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStencilRefDeclaration([NotNull] ShaderLabParser.StencilRefDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.stencilReadMaskDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStencilReadMaskDeclaration([NotNull] ShaderLabParser.StencilReadMaskDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.stencilWriteMaskDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStencilWriteMaskDeclaration([NotNull] ShaderLabParser.StencilWriteMaskDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.stencilCompDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStencilCompDeclaration([NotNull] ShaderLabParser.StencilCompDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.stencilPassDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStencilPassDeclaration([NotNull] ShaderLabParser.StencilPassDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.stencilFailDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStencilFailDeclaration([NotNull] ShaderLabParser.StencilFailDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.stencilZFailDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStencilZFailDeclaration([NotNull] ShaderLabParser.StencilZFailDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.stencilCompFrontDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStencilCompFrontDeclaration([NotNull] ShaderLabParser.StencilCompFrontDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.stencilPassFrontDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStencilPassFrontDeclaration([NotNull] ShaderLabParser.StencilPassFrontDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.stencilFailFrontDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStencilFailFrontDeclaration([NotNull] ShaderLabParser.StencilFailFrontDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.stencilZFailFrontDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStencilZFailFrontDeclaration([NotNull] ShaderLabParser.StencilZFailFrontDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.stencilCompBackDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStencilCompBackDeclaration([NotNull] ShaderLabParser.StencilCompBackDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.stencilPassBackDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStencilPassBackDeclaration([NotNull] ShaderLabParser.StencilPassBackDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.stencilFailBackDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStencilFailBackDeclaration([NotNull] ShaderLabParser.StencilFailBackDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.stencilZFailBackDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStencilZFailBackDeclaration([NotNull] ShaderLabParser.StencilZFailBackDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.hlslIncludeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHlslIncludeDeclaration([NotNull] ShaderLabParser.HlslIncludeDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.hlslProgramDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHlslProgramDeclaration([NotNull] ShaderLabParser.HlslProgramDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.cullModeValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCullModeValue([NotNull] ShaderLabParser.CullModeValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.blendFactorValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlendFactorValue([NotNull] ShaderLabParser.BlendFactorValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.blendOpValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlendOpValue([NotNull] ShaderLabParser.BlendOpValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.compareFuncValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompareFuncValue([NotNull] ShaderLabParser.CompareFuncValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ShaderLabParser.stencilOpValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStencilOpValue([NotNull] ShaderLabParser.StencilOpValueContext context);
}
} // namespace March.Editor.ShaderLab.Internal
